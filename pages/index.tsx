import type { NextPage } from 'next'
import useSWR from 'swr'
import Head from 'next/head'
//redux
import { wrapper } from '../store/store'
import { getCoins } from "../store/coin/coin.slice";
// interface
import {ICoinData} from "../interface/coin";
// components
import Header from "../components/header";
import CoinList from "../components/coin-list/index";
// styles
import styles from '../styles/Home.module.scss'

interface ICoinPage {
    coins: ICoinData
}

const Home: NextPage<ICoinPage> = ({coins}) => {
    const {data = [], error = ''} = coins;

  return (
      <>
          <Header />
            <div className={styles.container}>
              <Head>
                <title>Coin360...</title>
                <meta name="description" content="Generated by create next app" />
                <link rel="icon" href="/favicon.ico" />
              </Head>
              {error && error}
              <CoinList
                  data={data}
                  error={error}
                  fetchFunc={() => {console.log('refreshing')}}
                  refetchTime={10000} />
            </div>
      </>
  )
}

export const getServerSideProps = wrapper.getServerSideProps(store => async () => {
    /* We want the fetch on the server for SEO and page load speed.
    * Ideally though, we'd have pagination on the serverside, only grab the data for a single page here,
    * and use a fetch hook to dynamically pull each pages data on scroll
    * */
    const req = await store.dispatch(getCoins())
    const { payload = {} } = req
    console.log('State on server', store.getState());
    return {
        props: {
            coins: { data: payload?.data, error: payload?.error }
        },
    };
});

export default Home
