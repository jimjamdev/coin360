import type { NextPage } from 'next'
import Head from 'next/head'
import {getCoins} from '../providers'
import {ICoinData} from "../interface/coin";
import transformCoinData from "../lib/transform-coin-data";
import changeDiff from "../lib/change-diff";
import styles from '../styles/Home.module.scss'

interface ICoinPage {
    coinData: ICoinData
}

const Home: NextPage<ICoinPage> = ({coinData}) => {
  const {data = [], error = ''} = coinData;

  const transformedData = transformCoinData(data) || [];
  const slicedData = transformedData.slice(0, 5) || []; //todo: we want to tie this into a provider so we dont display all data at once. load what only on the screen with onscroll

  return (
    <div className={styles.container}>
      <Head>
        <title>Coin360</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      {error && error}
      <table>
        <tbody>
        {
            slicedData.map((coin, index) => {
                return (
                    <tr key={coin.name}>
                        <td className="cell-left">
                            <div>{coin.name}!</div>
                        </td>
                        {coin?.coins.map(c => {
                            const changeComparison = changeDiff(coin.change, c.change)
                            const isNegative = coin.change > c.change
                            const isEmptyCell = coin.name === c.name
                            const plusOrMinus = !isNegative ? '+' : '-'
                            return(
                                <td key={c.name}>
                                    { index === 0 && <div className="cell-title">{c.name}</div> }
                                    <div className={`cell-info ${isNegative && 'negative'} ${isEmptyCell && 'empty'}`}>
                                        {/*{c.change}%<br />*/}<strong>{isEmptyCell && '-' || plusOrMinus + changeComparison + '%'}</strong>
                                    </div>
                                </td>
                            )
                        })}
                    </tr>
                )
            })
        }
        </tbody>
      </table>
    </div>
  )
}

export async function getStaticProps() {
  const coinData = await getCoins()
  return {
    props: {coinData}, // will be passed to the page component as props
  }
}

export default Home
